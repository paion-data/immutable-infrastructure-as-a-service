"use strict";(self.webpackChunkhashicorp_aws=self.webpackChunkhashicorp_aws||[]).push([[5074],{9293:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var s=t(4848),r=t(8453);const n={sidebar_position:2,title:"Deployment via Screwdriver CD",description:"Deploying ELK via Screwdriver CD Template"},a="ELK Release Definition Template",l={id:"elk/screwdriver-cd-deployment",title:"Deployment via Screwdriver CD",description:"Deploying ELK via Screwdriver CD Template",source:"@site/docs/elk/screwdriver-cd-deployment.md",sourceDirName:"elk",slug:"/elk/screwdriver-cd-deployment",permalink:"/hashicorp-aws/docs/elk/screwdriver-cd-deployment",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/hashicorp-aws/tree/master/docs/docs/elk/screwdriver-cd-deployment.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Deployment via Screwdriver CD",description:"Deploying ELK via Screwdriver CD Template"},sidebar:"tutorialSidebar",previous:{title:"General Deployment",permalink:"/hashicorp-aws/docs/elk/"},next:{title:"General Troubleshooting",permalink:"/hashicorp-aws/docs/troubleshooting"}},c={},d=[{value:"How to Use This Template",id:"how-to-use-this-template",level:2},{value:"Installing Template in Screwdriver",id:"installing-template-in-screwdriver",level:3},{value:"Using the Template",id:"using-the-template",level:3}];function o(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"elk-release-definition-template",children:"ELK Release Definition Template"}),"\n",(0,s.jsxs)(i.p,{children:["hashicorp-aws offer a ",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/templates",children:"Screwdriver template"})," that deploys\n",(0,s.jsx)(i.a,{href:"https://www.hashicorp.com/resources/what-is-mutable-vs-immutable-infrastructure",children:"immutable"})," instances of ELK to AWS. It uses the ",(0,s.jsx)(i.a,{href:"https://github.com/QubitPi/screwdriver-cd-template-main",children:"screwdriver-template-main npm package"})," to\nassist with template validation, publishing, and tagging. The template tags the latest versions with the ",(0,s.jsx)(i.code,{children:"latest"})," tag."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Error loading elk-deployment-diagram.png",src:t(1081).A+"",width:"1404",height:"994"})}),"\n",(0,s.jsx)(i.h2,{id:"how-to-use-this-template",children:"How to Use This Template"}),"\n",(0,s.jsx)(i.h3,{id:"installing-template-in-screwdriver",children:"Installing Template in Screwdriver"}),"\n",(0,s.jsx)(i.p,{children:"The template needs to be installed first in Screwdriver running instance. Installation has two parts:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://github.com/QubitPi/hashicorp-aws/tree/master/adaptors/screwdriver-cd/templates/elk-sd-template.yaml",children:"the template"})}),"\n",(0,s.jsxs)(i.li,{children:["Some ",(0,s.jsx)(i.a,{href:"https://github.com/QubitPi/screwdriver-cd-commands",children:"pre-defined Screwdriver commands"})," that this template uses"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The template and the commands can be automatically installed using the regular ",(0,s.jsx)(i.a,{href:"https://github.com/QubitPi/hashicorp-aws/tree/master/screwdriver.yaml",children:"screwdriver.yaml"})," config file by\nfollowing the steps below:"]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/quickstart#create-a-new-pipeline",children:"Create a Screwdriver pipeline"})," with the repository link being\n",(0,s.jsx)(i.code,{children:"https://github.com/QubitPi/hashicorp-aws.git"})]}),"\n",(0,s.jsx)(i.li,{children:"Trigger a pipeline run, which will install the templates and commands automatically. Wait the pipeline to finish\nrunning."}),"\n",(0,s.jsxs)(i.li,{children:["The installed template and commands can be found in ",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/templates/job-templates#finding-templates",children:"Templates page"})," and\n",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/commands#finding-commands",children:"Commands page"}),", respectively"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"using-the-template",children:"Using the Template"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/templates#using-a-template",children:"Create a Screwdriver pipeline that uses this template"})," with the\n",(0,s.jsx)(i.code,{children:"screwdriver.yaml"})," file of"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"---\njobs:\n  main:\n    requires: [~pr, ~commit]\n    template: QubitPi/elk-release-definition-template@latest\n"})}),"\n",(0,s.jsxs)(i.p,{children:["The following ",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/screwdriver-cd-guide/user-guide/configuration/secrets",children:"Screwdriver Secrets"})," needs to be defined before running the pipeline:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"../setup#aws",children:(0,s.jsx)(i.code,{children:"AWS_ACCESS_KEY_ID"})})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"../setup#aws",children:(0,s.jsx)(i.code,{children:"AWS_SECRET_ACCESS_KEY"})})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SSL_CERTIFICATE"})," - the content of SSL certificate file serving HTTPS-enabled DNS name of the EC2 hosting our ELK\ninstance. This is the same as the ",(0,s.jsx)(i.code,{children:"SSL_CERTIFICATE"})," from the ",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/hashicorp-aws/docs/setup#ssl",children:"general SSL setup of hashicorp-aws"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SSL_CERTIFICATE_KEY"})," - the content of SSL certificate key file serving HTTPS-enabled DNS name of the EC2 hosting our\nELK instance. This is the same as the ",(0,s.jsx)(i.code,{children:"SSL_CERTIFICATE_KEY"})," from the ",(0,s.jsx)(i.a,{href:"https://qubitpi.github.io/hashicorp-aws/docs/setup#ssl",children:"general SSL setup of hashicorp-aws"})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["To run the pipeline, fill in the AWS-related ",(0,s.jsx)(i.strong,{children:"parameters"})," first"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Error loading elk-release-definition-template-parameters.png",src:t(1167).A+"",width:"835",height:"1385"})}),"\n",(0,s.jsxs)(i.p,{children:['Then hit "',(0,s.jsx)(i.strong,{children:"Submit"}),'" to start deploying.']}),"\n",(0,s.jsxs)(i.admonition,{type:"warning",children:[(0,s.jsxs)(i.p,{children:["Once the pipeline deploys ELK, we must remember to do the\n",(0,s.jsx)(i.a,{href:"index#post-setup-in-ec2-instance",children:"post setup in EC2 instance"}),"."]}),(0,s.jsxs)(i.p,{children:["The password for user 'elastic' can be found ",(0,s.jsx)(i.em,{children:"packer-build"})," step logs. Here is an example:"]}),(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Error loading elastic-password-from-log.png",src:t(5296).A+"",width:"3584",height:"1925"})})]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},5296:(e,i,t)=>{t.d(i,{A:()=>s});const s=t.p+"assets/images/elastic-password-from-log-63b8b57e4befaf2ec8e27ce008c89806.png"},1081:(e,i,t)=>{t.d(i,{A:()=>s});const s=t.p+"assets/images/elk-deployment-diagram-c6144ad9e3b78ea9e9a1b6ec8d3d3108.png"},1167:(e,i,t)=>{t.d(i,{A:()=>s});const s=t.p+"assets/images/elk-release-definition-template-parameters-f6a1cc4c839a0a80f130ab12d0fd0a3c.png"},8453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>l});var s=t(6540);const r={},n=s.createContext(r);function a(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);