"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[611],{5915:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var a=i(3860),l=i(7910);const r={sidebar_position:1,title:"General Deployment"},s="Deploying Machine Learning Models to Production as REST API",t={id:"machine-learning/index",title:"General Deployment",description:"MLflow",source:"@site/docs/machine-learning/index.md",sourceDirName:"machine-learning",slug:"/machine-learning/",permalink:"/docs/machine-learning/",draft:!1,unlisted:!1,editUrl:"https://github.com/paion-data/immutable-infrastructure-as-a-service/tree/master/docs/docs/machine-learning/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"General Deployment"},sidebar:"docSidebar",previous:{title:"Machine Learning",permalink:"/docs/category/machine-learning"},next:{title:"Deployment via Screwdriver CD",permalink:"/docs/machine-learning/screwdriver-cd-deployment"}},o={},c=[{value:"MLflow",id:"mlflow",level:2},{value:"General Deployment",id:"general-deployment",level:3},{value:"Generating Machine Learning Models",id:"generating-machine-learning-models",level:3},{value:"AWS Credentials",id:"aws-credentials",level:3},{value:"Installing HashiCorp Packer &amp; Terraform",id:"installing-hashicorp-packer--terraform",level:3},{value:"Getting HashiCorp Deployment Tool",id:"getting-hashicorp-deployment-tool",level:3},{value:"Defining Packer Variables",id:"defining-packer-variables",level:3},{value:"Defining Terraform Variables",id:"defining-terraform-variables",level:3},{value:"Building AMI Image",id:"building-ami-image",level:3},{value:"Deploying to EC2",id:"deploying-to-ec2",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Model REST Container Fails to Start",id:"model-rest-container-fails-to-start",level:3},{value:"Deployment via Screwdriver CD",id:"deployment-via-screwdriver-cd",level:2},{value:"Deployment via HACP",id:"deployment-via-hacp",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"deploying-machine-learning-models-to-production-as-rest-api",children:"Deploying Machine Learning Models to Production as REST API"}),"\n",(0,a.jsx)(n.h2,{id:"mlflow",children:"MLflow"}),"\n",(0,a.jsx)(n.h3,{id:"general-deployment",children:"General Deployment"}),"\n",(0,a.jsx)(n.h3,{id:"generating-machine-learning-models",children:"Generating Machine Learning Models"}),"\n",(0,a.jsxs)(n.p,{children:["hashicorp-aws deploys an instance\n",(0,a.jsx)(n.a,{href:"https://qubitpi.github.io/mlflow/getting-started/quickstart-2/index.html#running-machine-learning-model-not-managed-by-mlflow-as-rest-api-in-docker-container",children:"running Machine Learning Model NOT Managed by MLflow as REST API in Docker Container"}),"\nand ",(0,a.jsx)(n.a,{href:"https://qubitpi.github.io/mlflow/getting-started/quickstart-2/index.html#serving-the-model-in-docker-container-via-rest-api",children:"exposes that API to public"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Please follow\n",(0,a.jsx)(n.a,{href:"https://qubitpi.github.io/mlflow/getting-started/quickstart-2/index.html#running-machine-learning-model-not-managed-by-mlflow-as-rest-api-in-docker-container",children:"this dedicated guide"}),"\nto generate the Machine Learning model in a directory ready for use next. We will call this directory\n",(0,a.jsx)(n.strong,{children:"/abs/path/to/mlflow_models/"})," from now on"]}),"\n",(0,a.jsxs)(n.admonition,{title:"Support custom module import",type:"tip",children:[(0,a.jsxs)(n.p,{children:["Suppose our ML model depends on a custom module called ",(0,a.jsx)(n.code,{children:"my_module"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from my_module import my_function\n\nclass MyModel(mlflow.pyfunc.PythonModel):\n    ...\n"})}),(0,a.jsxs)(n.p,{children:["How do we make ",(0,a.jsx)(n.code,{children:"my_module"})," available at runtime? It's very easy. Simply put the custom module under\n",(0,a.jsx)(n.code,{children:"/abs/path/to/mlflow_models/"})," and import that module as is. hashicorp-aws will bind ",(0,a.jsx)(n.code,{children:"/abs/path/to/mlflow_models/"}),"\nto ",(0,a.jsx)(n.a,{href:"https://qubitpi.github.io/cpython/using/cmdline.html#envvar-PYTHONPATH",children:(0,a.jsx)(n.code,{children:"PYTHONPATH"})})," at runtime so that ",(0,a.jsx)(n.code,{children:"my_module"})," will be available as long as both ",(0,a.jsx)(n.code,{children:"MyModel"})," and ",(0,a.jsx)(n.code,{children:"my_module"})," are under\n",(0,a.jsx)(n.code,{children:"/abs/path/to/mlflow_models/"})," directory."]})]}),"\n",(0,a.jsxs)(n.p,{children:["After model is generated, add a ",(0,a.jsx)(n.strong,{children:"PORT"})," file containing a port number only. For eample,"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",metastring:'title="PORT"',children:"8080\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"After model is generated...",type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["If the container runs multiple models at different ports, please make sure to add a ",(0,a.jsx)(n.strong,{children:"PORT"})," file containing a port\nnumber only to each sub-dir of ",(0,a.jsx)(n.code,{children:"/abs/path/to/mlflow_models/"})," with one sub-dir holding one model"]}),"\n",(0,a.jsxs)(n.li,{children:["If we need custom module imports in a model, add module.py and a ",(0,a.jsx)(n.code,{children:"__init__.py"})," file to the sub-dir of that model under\n",(0,a.jsx)(n.code,{children:"/abs/path/to/mlflow_models/"})]}),"\n"]})}),"\n",(0,a.jsx)(n.h3,{id:"aws-credentials",children:"AWS Credentials"}),"\n",(0,a.jsx)(n.p,{children:"The following environment variables need to be defined:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../setup#aws",children:"AWS_ACCESS_KEY_ID"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../setup#aws",children:"AWS_SECRET_ACCESS_KEY"})}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"installing-hashicorp-packer--terraform",children:"Installing HashiCorp Packer & Terraform"}),"\n",(0,a.jsx)(n.p,{children:"We will go through deployment using Packer & Terraform command line tools which can be installed by following the\ninstructions below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://packer.qubitpi.org/packer/install",children:"Installing Packer"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://terraform.qubitpi.org/terraform/install",children:"Installing Terraform"})}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"getting-hashicorp-deployment-tool",children:"Getting HashiCorp Deployment Tool"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-console",children:"git clone https://github.com/QubitPi/hashicorp-aws.git\n"})}),"\n",(0,a.jsx)(n.h3,{id:"defining-packer-variables",children:"Defining Packer Variables"}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.a,{href:"https://packer.qubitpi.org/packer/guides/hcl/variables#from-a-file",children:"HashiCorp Packer variable values file"})," named ",(0,a.jsx)(n.strong,{children:"aws-mlflow-docker.pkrvars.hcl"})," under\n",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://github.com/QubitPi/hashicorp-aws/tree/master/hashicorp/machine-learning/images/mlflow-docker",children:"hashicorp-aws/hashicorp/machine-learning/images/mlflow-docker"})})," directory with the following contents"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",metastring:"title=hashicorp-aws/hashicorp/machine-learning/images/mlflow-docker",children:'ami_region     = "my-aws-region"\nami_name       = "my-mlflow-models"\ninstance_type  = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nml_models_path = "/abs/path/to/mlflow_models/"\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ami_region"})," is the ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.Availability",children:"image region"})," where ML models ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html",children:"AMI"})," will be published to. The published\nimage will be ",(0,a.jsx)(n.em,{children:"private"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ami_name"})," is the name of the resulting AMI that will appear when managing AMIs in the AWS console or via APIs. This\ncan be the same across builds, because hashicorp-aws will deregister the old AMI with the same name and replace it\nwith the current built one"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"instance_type"})," is the recommended ",(0,a.jsx)(n.a,{href:"https://aws.amazon.com/ec2/instance-types/",children:"AWS EC2 instance type"})," running this image"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"ml_models_path"})," is the directory we made ready ",(0,a.jsx)(n.a,{href:"#generating-machine-learning-models",children:"previously"})]}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.a,{href:"https://packer.qubitpi.org/packer/docs/provisioners/file#directory-uploads",children:["The path must not end with a ",(0,a.jsx)(n.code,{children:"/"})]}),". For\nexample, it's OK with ",(0,a.jsx)(n.code,{children:'ml_models_path = "/home/ubuntu/mymodel"'}),", but ",(0,a.jsx)(n.code,{children:'ml_models_path = "/home/ubuntu/mymodel/"'})," is not"]})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"defining-terraform-variables",children:"Defining Terraform Variables"}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.a,{href:"https://terraform.qubitpi.org/terraform/language/values/variables#variable-definitions-tfvars-files",children:"HashiCorp Terraform variable values file"})," named ",(0,a.jsx)(n.strong,{children:"aws-mlflow-docker.tfvars"})," under\n",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://github.com/QubitPi/hashicorp-aws/tree/master/hashicorp/machine-learning/instances/mlflow-docker",children:"hashicorp-aws/hashicorp/machine-learning/instances/mlflow-docker"})})," directory with the following contents:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",metastring:'title="hashicorp-aws/hashicorp/machine-learning/instances/mlflow-docker/aws-mlflow-docker.tfvars"',children:'aws_ec2_region    = "my-aws-region"\nami_name          = "my-mlflow-models"\ninstance_type     = "<one of t2.micro/t2.small/t2.medium/t2.large/t2.xlarge/t2.2xlarge>"\nec2_instance_name = "My MLflow models"\nsecurity_groups   = ["myKeyPairName"]\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"aws_ec2_region"})," is the ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.Availability",children:"EC2 runtime region"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ami_name"})," is the name of the published AMI; ",(0,a.jsxs)(n.strong,{children:["it must be the same as the ",(0,a.jsx)(n.code,{children:"ami_name"})," in\n",(0,a.jsx)(n.a,{href:"#defining-packer-variables",children:"Packer variable file"})]})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"instance_type"})," is the ",(0,a.jsx)(n.a,{href:"https://aws.amazon.com/ec2/instance-types/",children:"AWS EC2 instance type"})," used for deployed infrastructure"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ec2_instance_name"})," is the deployed EC2 name as appeared in the instance list of AWS console; it can be arbitrary"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"security_groups"})," is the list of ",(0,a.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-groups.html",children:"AWS Security Group"})," ",(0,a.jsx)(n.em,{children:"names"})," to associate with (yes, not ID, but name...)"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"building-ami-image",children:"Building AMI Image"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cd hashicorp-aws/hashicorp/machine-learning/images/mlflow-docker\npacker init .\npacker validate -var "skip_create_ami=true" .\npacker build -var "skip_create_ami=false" .\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"The packer simply builds a non-model specific AMI"})}),"\n",(0,a.jsx)(n.h3,{id:"deploying-to-ec2",children:"Deploying to EC2"}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["Depending on the ",(0,a.jsx)(n.a,{href:"#defining-packer-variables",children:"AMI"})," and ",(0,a.jsx)(n.a,{href:"#defining-terraform-variables",children:"EC2"})," configs, ",(0,a.jsx)(n.strong,{children:"please be aware\nAWS credit charges shall incur after the following commands execute"})]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd ../instances/mlflow-docker\nterraform init\nterraform validate\nterraform apply -auto-approve\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsx)(n.h3,{id:"model-rest-container-fails-to-start",children:"Model REST Container Fails to Start"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-console",children:'WARNING mlflow.utils.virtualenv: Encountered unexpected error while creating /root/.mlflow/envs/mlflow-8aab4f34fgrg33aa5987gyub0037333d3e4a818bc5e\nTraceback (most recent call last):\n  File "<string>", line 1, in <module>\n  File "/usr/local/lib/python3.8/dist-packages/mlflow/models/container/__init__.py", line 92, in _install_pyfunc_deps\n    activate_cmd = _install_model_dependencies_to_env(model_path, env_manager) if model_path else []\n  File "/usr/local/lib/python3.8/dist-packages/mlflow/models/container/__init__.py", line 167, in _install_model_dependencies_to_env\n    env_activate_cmd = _get_or_create_virtualenv(model_path)\n  File "/usr/local/lib/python3.8/dist-packages/mlflow/utils/virtualenv.py", line 379, in _get_or_create_virtualenv\n    activate_cmd = _create_virtualenv(\n  File "/usr/local/lib/python3.8/dist-packages/mlflow/utils/virtualenv.py", line 289, in _create_virtualenv\n    _exec_cmd(cmd, capture_output=capture_output, cwd=tmpdir, extra_env=extra_env)\n  File "/usr/local/lib/python3.8/dist-packages/mlflow/utils/process.py", line 120, in _exec_cmd\n    raise ShellCommandException.from_completed_process(comp_process)\nmlflow.utils.process.ShellCommandException: Non-zero exit code: -9\nCommand: [\'bash\', \'-c\', \'source /root/.mlflow/envs/mlflow-8aab4f34fgrg33aa5987gyub0037333d3e4a818bc5e/bin/activate && python -m pip install --quiet -r requirements.afergr030a0aedfe32e4a0a6f2e57.txt\']\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The container requires at least 4 GB of memory. Please make sure the EC2 instance has enough memory"})}),"\n",(0,a.jsx)(n.h2,{id:"deployment-via-screwdriver-cd",children:"Deployment via Screwdriver CD"}),"\n",(0,a.jsxs)(n.p,{children:["hashicorp-aws supports deployment using ",(0,a.jsx)(n.a,{href:"screwdriver-cd-deployment",children:"Screwdriver CD"}),". Please check it out. ",(0,a.jsx)("img",{src:"https://github.com/QubitPi/QubitPi/blob/master/img/8%E5%A5%BD.gif?raw=true",height:"40px"})]}),"\n",(0,a.jsx)(n.h2,{id:"deployment-via-hacp",children:"Deployment via HACP"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Please try our HACP platform to deploy a Machine Learning API instance. It gives us one-click experience that helps us\nstand up the API in a minute."})})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7910:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>s});var a=i(1733);const l={},r=a.createContext(l);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);