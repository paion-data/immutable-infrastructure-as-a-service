# Copyright 2024 Paion Data. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
namespace: paion-data
name: elk-release-definition-template
version: '1.0.0'
description: Screwdriver CD template for deploying ELK to AWS through HashiCorp.
maintainer: jingjinghu@paion-data.dev
config:
  image: buildpack-deps:22.04-scm
  parameters:
    ami-region:
      value: ["us-east-1", "us-east-2", "us-west-1", "us-west-2"]
      description: "The AWS region where ELK AMI will be published to. The published image will be private"
    ami-name:
      value: "my-elk-ami"
      description: "The published AMI name; it can be arbitrary"
    aws-deploy-region:
      value: ["us-east-1", "us-east-2", "us-west-1", "us-west-2"]
      description: "The AWS region where ELK EC2 instance will be deployed into"
    instance-name:
      value: "My ELK instance"
      description: "The deployed EC2 name as appeared in the instance list of AWS console; it can be arbitrary"
    key-pair-name:
      value: "My SSH key pair"
      description: |
        The name of AWS EC2 key pair bound to this ELK instance. We will use this key pair to later ssh into the ELK EC2
        to for post setup discussed in hashicorp-aws documentation
    security-groups:
      value: '["My ELK API Security Group", "My ELK Admin Security Group"]'
      description: "The list of AWS Security Group names (yes, not ID, but name...) bound to the ELK EC2 instance."
    elk-domain:
      value: "myelk.mycompany.com"
      description: "The SSL-enabled domain that will serve various ELK endpoints, such as its API and Kibana UI"
    route-53-zone-id:
      value: "9DQXLTNSN7ZX9P8V2KZII"
      description: 'The AWS Route 53 hosted Zone ID that hosts the domain defined by "elk-domain"'
  steps:
    - install-packer: sd-cmd exec paion-data/install-hashicorp-packer-ubuntu@latest
    - install-terraform: sd-cmd exec paion-data/install-hashicorp-terraform-ubuntu@latest
    - checkout-hashicorp-deployment-tool: git clone --depth 1 https://github.com/paion-data/immutable-infrastructure-as-a-service.git ../hashicorp-aws

    - load-ssl-certificate-file: echo "$SSL_CERTIFICATE"         > ../hashicorp-aws/hashicorp/elk/images/ssl.crt
    - load-ssl-certificate-key-file: echo "$SSL_CERTIFICATE_KEY" > ../hashicorp-aws/hashicorp/elk/images/ssl.key
    - configure-nginx-ssl: sed -i -e "s/elk.domain.com/$(meta get parameters.elk-domain.value)/g" ../hashicorp-aws/hashicorp/elk/images/nginx-ssl.conf

    - load-packer-variable-file: |
        echo ami_region             = \"$(meta get parameters.ami-region.value)\" >> ../hashicorp-aws/hashicorp/elk/images/aws.auto.pkrvars.hcl
        echo ami_name               = \"$(meta get parameters.ami-name.value)\"   >> ../hashicorp-aws/hashicorp/elk/images/aws.auto.pkrvars.hcl
        echo ssl_cert_file_path     = \"ssl.crt\"                                 >> ../hashicorp-aws/hashicorp/elk/images/aws.auto.pkrvars.hcl
        echo ssl_cert_key_file_path = \"ssl.key\"                                 >> ../hashicorp-aws/hashicorp/elk/images/aws.auto.pkrvars.hcl

    - load-terraform-variable-file: |
        echo aws_deploy_region = \"$(meta get parameters.aws-deploy-region.value)\" >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo ami_name          = \"$(meta get parameters.ami-name.value)\"          >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo instance_name     = \"$(meta get parameters.instance-name.value)\"     >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo key_pair_name     = \"$(meta get parameters.key-pair-name.value)\"     >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo security_groups   = $(meta get parameters.security-groups.value)       >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo elk_domain        = \"$(meta get parameters.elk-domain.value)\"        >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars
        echo route_53_zone_id  = \"$(meta get parameters.route-53-zone-id.value)\"  >> ../hashicorp-aws/hashicorp/elk/instances/aws.auto.tfvars

    - packer-init: cd ../hashicorp-aws/hashicorp/elk/images && packer init .
    - packer-validate: packer validate -var "skip_create_ami=true" .
    - packer-build: packer build -var "skip_create_ami=false" .

    - terraform-init: cd ../instances && terraform init
    - terraform-validate: terraform validate
    - terraform-apply: terraform apply -auto-approve
  secrets:
    - SSL_CERTIFICATE
    - SSL_CERTIFICATE_KEY
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
